#!/usr/bin/env python3
import sys


def solve(X: int, N: int, p: "List[int]"):
    p.sort()

    Q = []
    for q in range(-200, 200):
        if q not in p:
            Q.append(q)

    Q_diff = [abs(a - X) for a in Q]

    mn = min(Q_diff)

    ans_idx = Q_diff.index(mn)
    ans = Q[ans_idx]

    print(ans)
    return


# Generated by 1.1.7.1 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    X = int(next(tokens))  # type: int
    N = int(next(tokens))  # type: int
    p = [int(next(tokens)) for _ in range(N)]  # type: "List[int]"
    solve(X, N, p)

if __name__ == '__main__':
    main()
