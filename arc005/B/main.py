#!/usr/bin/env python3
import sys
import numpy as np

def solve(x: int, y: int, W: str, c: "List[int]"):
    s = np.asarray([int(digit) for row in c for digit in row]).reshape(9,9)
    x,y = y-1, x-1
    w1, w2, *_ = [c for c in '{0}...'.format(W)]

    x_dir, y_dir = 0, 0
    for w in [w1, w2]:
        if w == 'L':
            y_dir = -1
        if w == 'R':
            y_dir = 1
        if w == 'D':
            x_dir=1
        if w == 'U':
            x_dir = -1

    ANS = ''
    for i in range(4):
        ANS += str(s[x, y])

        if not 0 <= x + x_dir < 9:
            x_dir *= -1
        if not 0 <= y + y_dir < 9:
            y_dir *= -1

        x += x_dir
        y += y_dir

    print(ANS)
    return


# Generated by 1.1.6 https://github.com/kyuridenamida/atcoder-tools  (tips: You use the default template now. You can remove this line by using your custom template)
def main():
    def iterate_tokens():
        for line in sys.stdin:
            for word in line.split():
                yield word
    tokens = iterate_tokens()
    x = int(next(tokens))  # type: int
    y = int(next(tokens))  # type: int
    W = next(tokens)  # type: str
    c = [next(tokens) for _ in range(9)]  # type: "List[int]"
    solve(x, y, W, c)

if __name__ == '__main__':
    main()
